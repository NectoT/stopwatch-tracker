// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * App struct
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

export function AddStopwatch(id: string, name: string, hue: number): Promise<boolean> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3808417367, id, name, hue) as any;
    return $resultPromise;
}

export function DeleteStopwatch(id: string): Promise<boolean> & { cancel(): void } {
    let $resultPromise = $Call.ByID(831273313, id) as any;
    return $resultPromise;
}

export function GetStopwatch(id: string): Promise<$models.StopwatchData> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2848492942, id) as any;
    return $resultPromise;
}

export function GetStopwatchIds(): Promise<string[] | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3226714752) as any;
    return $resultPromise;
}

export function GetStopwatches(): Promise<{ [_: string]: $models.StopwatchData } | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3317269670) as any;
    return $resultPromise;
}

export function GetUserColorTheme(): Promise<$models.ColorTheme> & { cancel(): void } {
    let $resultPromise = $Call.ByID(438623068) as any;
    return $resultPromise;
}

export function HasStopwatch(id: string): Promise<boolean> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2186654242, id) as any;
    return $resultPromise;
}

export function SetUserColorTheme(theme: $models.ColorTheme): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(696175552, theme) as any;
    return $resultPromise;
}

export function UpdateStopwatchName(id: string, name: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(2566254020, id, name) as any;
    return $resultPromise;
}

export function UpdateStopwatchTime(id: string, timerActive: boolean, timeAccumulated: number): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(398299862, id, timerActive, timeAccumulated) as any;
    return $resultPromise;
}
